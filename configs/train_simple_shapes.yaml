hydra:
  run:
    dir: . 
  output_subdir: null 


defaults:
  - datasets: simple_shapes
  - optimizer: adam
  - model: cls_model
  - scheduler: multistep
  - transforms@train_transform: simple_shapes/train_transform
  - transforms@test_transform: simple_shapes/test_transform
  - transforms@pre_transform: simple_shapes/pre_transform
  - logger: tensorboard
  - _self_

base_exp_dir: "./exp/simple_shapes"
exp_dir: "exp"
log_dir: "logs"
config_dir: "config"
checkpoint_dir: "checkpoint"

model:
  num_transformer_blocks: 3

params:
  seed: 300
  precision: 16
  max_epochs: 10
  train_batch_size: 32
  test_batch_size: 128

model_trainer:
  _target_: training.trainers.cls_model.ClsTrainer
  _recursive_: false

trainer:
  _target_: pytorch_lightning.Trainer
  amp_backend: "native"
  auto_select_gpus: true
  benchmark: true
  check_val_every_n_epoch: 2
  val_check_interval: 1.0
  deterministic: false
  fast_dev_run: false
  accelerator: 'gpu'
  devices: 1
  precision: ${params.precision}
  max_epochs: ${params.max_epochs}
  inference_mode: true
  log_every_n_steps: 10
  callbacks:
    - _target_: pytorch_lightning.callbacks.ModelCheckpoint
      dirpath: ${base_exp_dir}/${exp_dir}/${checkpoint_dir}
      filename: '{epoch}-test-acc-{Test/Accuracy:.2f}'
      monitor: "Test/Accuracy"
      auto_insert_metric_name: false
      every_n_epochs: ${...check_val_every_n_epoch}
      save_last: true
      mode: "max"
    - _target_: pytorch_lightning.callbacks.EarlyStopping
      monitor: ${...callbacks[0].monitor}
      min_delta: 0.05
      mode: ${...callbacks[0].mode}
      strict: true

  logger: ${logger}


datasets:
  train_load_sett:
    transform: ${train_transform}
    pre_transform: ${pre_transform}
    num_workers: 1
    batch_size: ${params.train_batch_size}
  test_load_sett:
    transform: ${test_transform}
    pre_transform: ${pre_transform}
    num_workers: 1
    batch_size: ${params.test_batch_size}
